Найпростішим типом даних являються КОЛЕКЦІЇ - це набір даних будь-якого типу без
визначеної послідовності.
Колекції не мають практичного застосування у програмуванні, але на їх основі
побудовані такі типи даних як ARRAY, LINKED_LIST, STACK, QUEUE, DEQUE.


ARRAY - колекція з можливістю індексації та навігації по індексу.
Оцінка складності алгоритму:
- O(1) при доступі
- O(n) при пошуку, вставці чи видаленні


LINKED_LIST - масив елементів (вузлів), що містять не лише дані, а й посилання
на наступний (однонаправлений список) та попередній (двонаправлений список)
елемент масиву.
Оцінка складності алгоритму:
- O(1) при доступі та пошуку;
- O(n) при вставці чи видаленні.


STACK (LIFO) - linked_list, в якому реалізовано можливість додавати чи видаляти
лише останній (найновіший) доданий елемент.
Оцінка складності алгоритму:
- O(1) при доступі та пошуку;
- O(n) при вставці чи видаленні.
Традиційні методи:
push() - вставити елемент;
pop() - витягти (видалити) елемент.


QUEUE (FIFO) - модифікація стеку, в якій (витягається) видаляється найстарший
елемент (як в класичній людській черзі). Черга може бути однонаправлена (QUEUE)
та двонаправлена (DEQUE).
Черги доступні у стандартному модулі через import collections
Оцінка складності алгоритму:
- O(1) при доступі та пошуку;
- O(n) при вставці чи видаленні.
Традиційні терміни:
HEAD - перший (найстарший) елемент;
TAIL - останній (найновіший) елемент.
Традиційні методи:
enqueue() - додати TAIL елемент;
dequeue() - видалити HEAD елемент;
peek() - подивитись HEAD елемент без видалення.